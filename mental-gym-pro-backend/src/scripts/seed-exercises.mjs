// src/scripts/seed-exercises.mjs
import mongoose from 'mongoose'
import dotenv from 'dotenv'
import { fileURLToPath } from 'url'
import path from 'path'
import Exercise from '../models/Exercise.js'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

// Cargar variables de entorno desde la ra√≠z del backend
dotenv.config({ path: path.resolve(__dirname, '../.env') })

const uri = process.env.MONGO_URI
if (!uri) {
  console.error('‚ùå Falta MONGO_URI en .env (ruta usada):', path.resolve(__dirname, '../.env'))
  process.exit(1)
}

await mongoose.connect(uri)
console.log('‚úÖ Conectado a MongoDB')

// Eliminar √≠ndice legacy `name_1` si existe
try {
  await Exercise.collection.dropIndex('name_1')
  console.log('üßπ √çndice legacy name_1 eliminado')
} catch (e) {
  if (e?.codeName === 'IndexNotFound') {
    console.log('‚ÑπÔ∏è √çndice name_1 no existe, seguimos')
  } else {
    console.log('‚ö†Ô∏è No se pudo eliminar name_1:', e.message)
  }
}

// Sincronizar √≠ndices con el schema actual
await Exercise.syncIndexes()
console.log('üîÅ √çndices sincronizados')

// Vaciar colecci√≥n
await Exercise.deleteMany({})
console.log('üóëÔ∏è Colecci√≥n Exercise vaciada')

// Insertar ejercicios
await Exercise.insertMany([
  { title: 'Memoria de pares', description: 'Encuentra parejas id√©nticas.', category: 'memoria', difficulty: 'easy', duration: 5, instructions: ['Observa las cartas', 'Encuentra parejas', 'Minimiza intentos'], icon: 'üß†' },
  { title: 'Secuencias l√≥gicas', description: 'Completa la serie seg√∫n la regla.', category: 'logica', difficulty: 'medium', duration: 6, instructions: ['Detecta patr√≥n', 'Elige la opci√≥n correcta'], icon: 'üß©' },
  { title: 'Atenci√≥n selectiva', description: 'Detecta el s√≠mbolo objetivo entre distractores.', category: 'atencion', difficulty: 'medium', duration: 4, instructions: ['Mira el objetivo', 'Haz clic s√≥lo cuando aparezca', 'Minimiza errores'], icon: 'üéØ' },
  { title: 'C√°lculo r√°pido', description: 'Resuelve operaciones bajo presi√≥n.', category: 'calculo', difficulty: 'hard', duration: 6, instructions: ['Responde r√°pido y preciso', 'Se penalizan errores', 'El tiempo importa'], icon: '‚ûó' },
  { title: 'Velocidad de reacci√≥n', description: 'Responde lo m√°s r√°pido posible a los est√≠mulos.', category: 'velocidad', difficulty: 'easy', duration: 3, instructions: ['Mantente atento', 'Haz clic al ver la se√±al', 'Evita anticiparte'], icon: '‚ö°' },
  { title: 'Flexibilidad cognitiva', description: 'Cambia de regla cuando el sistema te lo indique.', category: 'flexibilidad', difficulty: 'medium', duration: 5, instructions: ['Aplica la regla actual', 'Cambia al recibir la se√±al', 'Mant√©n precisi√≥n'], icon: 'üîÄ' },

  // Nuevos ejercicios
  { title: 'Memoria auditiva', description: 'Recuerda y repite secuencias de sonidos.', category: 'memoria', difficulty: 'medium', duration: 5, instructions: ['Escucha con atenci√≥n', 'Repite en el orden correcto', 'Incrementa la dificultad progresivamente'], icon: 'üéµ' },
  { title: 'Rompecabezas visual', description: 'Reconstruye la imagen lo m√°s r√°pido posible.', category: 'logica', difficulty: 'medium', duration: 7, instructions: ['Observa la imagen completa', 'Mueve las piezas', 'Completa en el menor tiempo'], icon: 'üñºÔ∏è' },
  { title: 'Caza del n√∫mero', description: 'Encuentra un n√∫mero objetivo entre una lista desordenada.', category: 'atencion', difficulty: 'easy', duration: 4, instructions: ['Identifica el n√∫mero objetivo', 'Haz clic s√≥lo cuando aparezca'], icon: 'üî¢' },
  { title: 'Operaciones encadenadas', description: 'Resuelve operaciones consecutivas sin pausa.', category: 'calculo', difficulty: 'hard', duration: 8, instructions: ['Calcula r√°pido', 'Mant√©n precisi√≥n', 'No pierdas el ritmo'], icon: 'üßÆ' }
])

console.log('‚úÖ Ejercicios insertados correctamente')
await mongoose.disconnect()
process.exit(0)
